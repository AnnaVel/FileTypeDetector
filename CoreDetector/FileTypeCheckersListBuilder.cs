
namespace FileTypeDetect;

public class FileTypeCheckersListBuilder : IFileTypeCheckersListBuilder
{
    /// <summary>
    /// Override this if you would like to extend the list of file types that can be checked for.
    /// </summary>
    /// <returns>A list of FileTypeCheckers that will be used to check files for their file type.</returns>
    public virtual IEnumerable<IFileTypeChecker> BuildFileTypeCheckers()
    {
        return new List<IFileTypeChecker>(){
            new LeadingBytesFileTypeChecker(new FileType("", "pdf"), new byte?[]{0x25, 0x50, 0x44, 0x46, 0x2D}),

            new LeadingBytesFileTypeChecker(new FileType("UTF-8 byte order mark commonly seen in text files.", "txt"), new byte?[]{0xEF, 0xBB, 0xBF}),
            new LeadingBytesFileTypeChecker(new FileType("UTF-16LE byte order mark commonly seen in text files.", "txt"), new byte?[]{0xFF, 0xFE}),
            new LeadingBytesFileTypeChecker(new FileType("UTF-16BE byte order mark commonly seen in text files.", "txt"), new byte?[]{0xFE, 0xFF}),
            new LeadingBytesFileTypeChecker(new FileType("UTF-32LE byte order mark for text", "txt"), new byte?[]{0xFF, 0xFE, 0x00, 0x00}),
            new LeadingBytesFileTypeChecker(new FileType("UTF-32BE byte order mark for text", "txt"), new byte?[]{0x00, 0x00, 0xFE, 0xFF}),
            new LeadingBytesFileTypeChecker(new FileType("UTF-7 byte order mark for text", ""), new byte?[]{0x2B, 0x2F, 0x76, 0x38}),
            new LeadingBytesFileTypeChecker(new FileType("UTF-7 byte order mark for text", ""), new byte?[]{0x2B, 0x2F, 0x76, 0x39}),
            new LeadingBytesFileTypeChecker(new FileType("UTF-7 byte order mark for text", ""), new byte?[]{0x2B, 0x2F, 0x76, 0x2B}),
            new LeadingBytesFileTypeChecker(new FileType("UTF-7 byte order mark for text", ""), new byte?[]{0x2B, 0x2F, 0x76, 0x2F}),
            new LeadingBytesFileTypeChecker(new FileType("SCSU byte order mark for text", "txt"), new byte?[]{0x0E, 0xFE, 0xFF}),

            new ZipFileTypeChecker(new FileType("", "docx"), "word/document.xml"),
            new ZipFileTypeChecker(new FileType("", "xlsx"), "xl/workbook.xml"),
            new ZipFileTypeChecker(new FileType("", "pptx"), "ppt/presentation.xml"),
            new LeadingBytesFileTypeChecker(new FileType("", "zip"), new byte?[]{0x50, 0x4B}),

            new LeadingBytesFileTypeChecker(new FileType("Lotus 1-2-3 spreadsheet (v1) file", "wk1"), new byte?[]{0x00, 0x00, 0x02, 0x00, 0x06, 0x04, 0x06, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00}),
            new LeadingBytesFileTypeChecker(new FileType("Lotus 1-2-3 spreadsheet (v3) file", "wk3"), new byte?[]{0x00, 0x00, 0x1A, 0x00, 0x00, 0x10, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00}),
            new LeadingBytesFileTypeChecker(new FileType("Lotus 1-2-3 spreadsheet (v4 v5) file", "wk4", "wk5"), new byte?[]{0x00, 0x00, 0x1A, 0x00, 0x02, 0x10, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00}),
            new LeadingBytesFileTypeChecker(new FileType("Lotus 1-2-3 spreadsheet (v9) file", "123"), new byte?[]{0x00, 0x00, 0x1A, 0x00, 0x05, 0x10, 0x04}),
            new LeadingBytesFileTypeChecker(new FileType("Amiga Hunk executable file", ""), new byte?[]{0x00, 0x00, 0x03, 0xF3}),
            new LeadingBytesFileTypeChecker(new FileType("Quark Express document  (little-endian)", "qxd"), new byte?[]{0x00, 0x00, 0x49, 0x49, 0x58, 0x50, 0x52}),
            new LeadingBytesFileTypeChecker(new FileType("Quark Express document  (big-endian)", "qxd"), new byte?[]{0x00, 0x00, 0x4D, 0x4D, 0x58, 0x50, 0x52}),
            new LeadingBytesFileTypeChecker(new FileType("Password Gorilla Password Database", "psafe3"), new byte?[]{0x50, 0x57, 0x53, 0x33}),
            new LeadingBytesFileTypeChecker(new FileType("Libpcap File Format[2]  (little-endian)", "pcap"), new byte?[]{0xD4, 0xC3, 0xB2, 0xA1}),
            new LeadingBytesFileTypeChecker(new FileType("Libpcap File Format[2]  (big-endian)", "pcap"), new byte?[]{0xA1, 0xB2, 0xC3, 0xD4}),
            new LeadingBytesFileTypeChecker(new FileType("Libpcap File Format (nanosecond-resolution)[2] (little-endian)", "pcap"), new byte?[]{0x4D, 0x3C, 0xB2, 0xA1}),
            new LeadingBytesFileTypeChecker(new FileType("Libpcap File Format (nanosecond-resolution)[2] (big-endian)", "pcap"), new byte?[]{0xA1, 0xB2, 0x3C, 0x4D}),
            new LeadingBytesFileTypeChecker(new FileType("PCAP Next Generation Dump File Format[3]", "pcapng"), new byte?[]{0x0A, 0x0D, 0x0D, 0x0A}),
            new LeadingBytesFileTypeChecker(new FileType("RedHat Package Manager (RPM) package[4]", "rpm"), new byte?[]{0xED, 0xAB, 0xEE, 0xDB}),
            new LeadingBytesFileTypeChecker(new FileType("SQLite Database[5]", "sqlitedb", "sqlite", "db"), new byte?[]{0x53, 0x51, 0x4C, 0x69, 0x74, 0x65, 0x20, 0x66, 0x6F, 0x72, 0x6D, 0x61, 0x74, 0x20, 0x33, 0x00}),
            new LeadingBytesFileTypeChecker(new FileType("Amazon Kindle Update Package[6]", "bin"), new byte?[]{0x53, 0x50, 0x30, 0x31}),
            new LeadingBytesFileTypeChecker(new FileType("internal WAD (main resource file of Doom)[7]", "wad"), new byte?[]{0x49, 0x57, 0x41, 0x44}),
            new LeadingBytesFileTypeChecker(new FileType("IBM Storyboard bitmap file", "PIC"), new byte?[]{0x00}),
            new LeadingBytesFileTypeChecker(new FileType("Windows Program Information File", "PIF"), new byte?[]{0x00}),
            new LeadingBytesFileTypeChecker(new FileType("Mac Stuffit Self-Extracting Archive", "SEA"), new byte?[]{0x00}),
            new LeadingBytesFileTypeChecker(new FileType("IRIS OCR data file", "YTR"), new byte?[]{0x00}),
            new LeadingBytesFileTypeChecker(new FileType("Palm Desktop Calendar Archive", "DBA"), new byte?[]{0xBE, 0xBA, 0xFE, 0xCA}),
            new LeadingBytesFileTypeChecker(new FileType("Palm Desktop To Do Archive", "DBA"), new byte?[]{0x00, 0x01, 0x42, 0x44}),
            new LeadingBytesFileTypeChecker(new FileType("Palm Desktop Calendar Archive", "TDA"), new byte?[]{0x00, 0x01, 0x44, 0x54}),
            new LeadingBytesFileTypeChecker(new FileType("Telegram Desktop File", "TDF$"), new byte?[]{0x54, 0x44, 0x46, 0x24}),
            new LeadingBytesFileTypeChecker(new FileType("Telegram Desktop Encrypted File", "TDEF"), new byte?[]{0x54, 0x44, 0x45, 0x46}),
            new LeadingBytesFileTypeChecker(new FileType("Palm Desktop Data File (Access format)", ""), new byte?[]{0x00, 0x01, 0x00, 0x00}),
            new LeadingBytesFileTypeChecker(new FileType("Computer icon encoded in ICO file format[8]", "ico"), new byte?[]{0x00, 0x00, 0x01, 0x00}),
            new LeadingBytesFileTypeChecker(new FileType("Apple Icon Image format", "icns"), new byte?[]{0x69, 0x63, 0x6E, 0x73}),
            new LeadingBytesFileTypeChecker(new FileType("3rd Generation Partnership Project 3GPP and 3GPP2 multimedia files", "3gp", "3g2"), 4, new byte?[]{0x66, 0x74, 0x79, 0x70, 0x33, 0x67}),
            new LeadingBytesFileTypeChecker(new FileType("High Efficiency Image Container (HEIC)", "heic"), 4, new byte?[]{0x66, 0x74, 0x79, 0x70, 0x68, 0x65, 0x69, null, 0x74, 0x79, 0x70, 0x6D}),
            new LeadingBytesFileTypeChecker(new FileType("compressed file (often tar zip) using Lempel-Ziv-Welch algorithm", "z", "tar.z"), new byte?[]{0x1F, 0x9D}),
            new LeadingBytesFileTypeChecker(new FileType("Compressed file (often tar zip) using LZH algorithm", "z", "tar.z"), new byte?[]{0x1F, 0xA0}),
            new LeadingBytesFileTypeChecker(new FileType("Lempel Ziv Huffman archive file Method 0 (No compression)", "lzh"), 2, new byte?[]{0x2D, 0x68, 0x6C, 0x30, 0x2D}),
            new LeadingBytesFileTypeChecker(new FileType("Lempel Ziv Huffman archive file Method 5 (8KiB sliding window)", "lzh"), 2, new byte?[]{0x2D, 0x68, 0x6C, 0x35, 0x2D}),
            new LeadingBytesFileTypeChecker(new FileType("AmiBack Amiga Backup data file", "bac"), new byte?[]{0x42, 0x41, 0x43, 0x4B, 0x4D, 0x49, 0x4B, 0x45, 0x44, 0x49, 0x53, 0x4B}),
            new LeadingBytesFileTypeChecker(new FileType("AmiBack Amiga Backup index file", "idx"), new byte?[]{0x49, 0x4E, 0x44, 0x58}),
            new LeadingBytesFileTypeChecker(new FileType("Binary Property List file", "plist"), new byte?[]{0x62, 0x70, 0x6C, 0x69, 0x73, 0x74}),
            new LeadingBytesFileTypeChecker(new FileType("Compressed file using Bzip2 algorithm", "bz2"), new byte?[]{0x42, 0x5A, 0x68}),
            new LeadingBytesFileTypeChecker(new FileType("Image file encoded in the Graphics Interchange Format (GIF)[9]", "gif"), new byte?[]{0x47, 0x49, 0x46, 0x38, 0x37, 0x61}),
            new LeadingBytesFileTypeChecker(new FileType("Image file encoded in the Graphics Interchange Format (GIF)[9]", "gif"), new byte?[]{0x47, 0x49, 0x46, 0x38, 0x39, 0x61}),
            new LeadingBytesFileTypeChecker(new FileType("Tagged Image File Format (TIFF)[10] (little-endian)", "tif", "tiff"), new byte?[]{0x49, 0x49, 0x2A, 0x00}),
            new LeadingBytesFileTypeChecker(new FileType("Tagged Image File Format (TIFF)[10] (big-endian))", "tif", "tiff"), new byte?[]{0x4D, 0x4D, 0x00, 0x2A}),
            new LeadingBytesFileTypeChecker(new FileType("Canon RAW Format Version 2[11] Canon's RAW format is based on TIFF.[12]", "cr2"), new byte?[]{0x49, 0x49, 0x2A, 0x00, 0x10, 0x00, 0x00, 0x00, 0x43, 0x52}),
            new LeadingBytesFileTypeChecker(new FileType("Kodak Cineon image", "cin"), new byte?[]{0x80, 0x2A, 0x5F, 0xD7}),
            new LeadingBytesFileTypeChecker(new FileType("Compressed file using Rob Northen Compression (version 1) algorithm[13]", ""), new byte?[]{0x52, 0x4E, 0x43, 0x01}),
            new LeadingBytesFileTypeChecker(new FileType("Compressed file using Rob Northen Compression (version 2) algorithm[13]", ""), new byte?[]{0x52, 0x4E, 0x43, 0x02}),
            new LeadingBytesFileTypeChecker(new FileType("nuru ASCII/ANSI image and palette files[14]", "nui"), new byte?[]{0x4E, 0x55, 0x52, 0x55, 0x49, 0x4D, 0x47}),
            new LeadingBytesFileTypeChecker(new FileType("nuru ASCII/ANSI image and palette files[14]", "nup"), new byte?[]{0x4E, 0x55, 0x52, 0x55, 0x50, 0x41, 0x4C}),
            new LeadingBytesFileTypeChecker(new FileType("SMPTE DPX image (big-endian format)", "dpx"), new byte?[]{0x53, 0x44, 0x50, 0x58}),
            new LeadingBytesFileTypeChecker(new FileType("SMPTE DPX image (little-endian format)", "dpx"), new byte?[]{0x58, 0x50, 0x44, 0x53}),
            new LeadingBytesFileTypeChecker(new FileType("OpenEXR image", "exr"), new byte?[]{0x76, 0x2F, 0x31, 0x01}),
            new LeadingBytesFileTypeChecker(new FileType("Better Portable Graphics format[15]", "bpg"), new byte?[]{0x42, 0x50, 0x47, 0xFB}),
            new LeadingBytesFileTypeChecker(new FileType("JPEG raw or in the JFIF or Exif file format[16]", "jpg", "jpeg"), new byte?[]{0xFF, 0xD8, 0xFF, 0xDB}),
            new LeadingBytesFileTypeChecker(new FileType("JPEG raw or in the JFIF or Exif file format[16]", "jpg", "jpeg"), new byte?[]{0xFF, 0xD8, 0xFF, 0xE0, 0x00, 0x10, 0x4A, 0x46, 0x49, 0x46, 0x00, 0x01}),
            new LeadingBytesFileTypeChecker(new FileType("JPEG raw or in the JFIF or Exif file format[16]", "jpg", "jpeg"), new byte?[]{0xFF, 0xD8, 0xFF, 0xEE}),
            new LeadingBytesFileTypeChecker(new FileType("JPEG raw or in the JFIF or Exif file format[16]", "jpg", "jpeg"), new byte?[]{0xFF, 0xD8, 0xFF, 0xE1, null, null, 0x45, 0x78, 0x69, 0x66, 0x00, 0x00}),
            new LeadingBytesFileTypeChecker(new FileType("JPEG raw or in the JFIF or Exif file format[16]", "jpg"), new byte?[]{0xFF, 0xD8, 0xFF, 0xE0}),
            new LeadingBytesFileTypeChecker(new FileType("JPEG 2000 format[17]", "jp2", "j2k", "jpf", "jpm", "jpg2", "j2c", "jpc", "jpx", "mj2"), new byte?[]{0x00, 0x00, 0x00, 0x0C, 0x6A, 0x50, 0x20, 0x20, 0x0D, 0x0A, 0x87, 0x0A}),
            new LeadingBytesFileTypeChecker(new FileType("", ""), new byte?[]{0xFF, 0x4F, 0xFF, 0x51}),
            new LeadingBytesFileTypeChecker(new FileType("QOI - The “Quite OK Image Format”[18]", "qoi"), new byte?[]{0x71, 0x6F, 0x69, 0x66}),
            new LeadingBytesFileTypeChecker(new FileType("IFF Interleaved Bitmap Image", "ilbm", "lbm", "ibm", "iff"), new byte?[]{0x46, 0x4F, 0x52, 0x4D, null, null, null, null, 0x49, 0x4C, 0x42, 0x4D}),
            new LeadingBytesFileTypeChecker(new FileType("IFF 8-Bit Sampled Voice", "8svx", "8sv", "svx", "snd", "iff"), new byte?[]{0x46, 0x4F, 0x52, 0x4D, null, null, null, null, 0x38, 0x53, 0x56, 0x58}),
            new LeadingBytesFileTypeChecker(new FileType("Amiga Contiguous Bitmap", "acbm", "iff"), new byte?[]{0x46, 0x4F, 0x52, 0x4D, null, null, null, null, 0x41, 0x43, 0x42, 0x4D}),
            new LeadingBytesFileTypeChecker(new FileType("IFF Animated Bitmap", "anbm", "iff"), new byte?[]{0x46, 0x4F, 0x52, 0x4D, null, null, null, null, 0x41, 0x4E, 0x42, 0x4D}),
            new LeadingBytesFileTypeChecker(new FileType("IFF CEL Animation", "anim", "iff"), new byte?[]{0x46, 0x4F, 0x52, 0x4D, null, null, null, null, 0x41, 0x4E, 0x49, 0x4D}),
            new LeadingBytesFileTypeChecker(new FileType("IFF Facsimile Image", "faxx", "fax", "iff"), new byte?[]{0x46, 0x4F, 0x52, 0x4D, null, null, null, null, 0x46, 0x41, 0x58, 0x58}),
            new LeadingBytesFileTypeChecker(new FileType("IFF Formatted Text", "ftxt", "iff"), new byte?[]{0x46, 0x4F, 0x52, 0x4D, null, null, null, null, 0x46, 0x54, 0x58, 0x54}),
            new LeadingBytesFileTypeChecker(new FileType("IFF Simple Musical Score", "smus", "smu", "mus", "iff"), new byte?[]{0x46, 0x4F, 0x52, 0x4D, null, null, null, null, 0x53, 0x4D, 0x55, 0x53}),
            new LeadingBytesFileTypeChecker(new FileType("IFF Musical Score", "cmus", "mus", "iff"), new byte?[]{0x46, 0x4F, 0x52, 0x4D, null, null, null, null, 0x43, 0x4D, 0x55, 0x53}),
            new LeadingBytesFileTypeChecker(new FileType("IFF YUV Image", "yuvn", "yuv", "iff"), new byte?[]{0x46, 0x4F, 0x52, 0x4D, null, null, null, null, 0x59, 0x55, 0x56, 0x4E}),
            new LeadingBytesFileTypeChecker(new FileType("Amiga Fantavision Movie", "iff"), new byte?[]{0x46, 0x4F, 0x52, 0x4D, null, null, null, null, 0x46, 0x41, 0x4E, 0x54}),
            new LeadingBytesFileTypeChecker(new FileType("Audio Interchange File Format", "aiff", "aif", "aifc", "snd", "iff"), new byte?[]{0x46, 0x4F, 0x52, 0x4D, null, null, null, null, 0x41, 0x49, 0x46, 0x46}),
            new LeadingBytesFileTypeChecker(new FileType("lzip compressed file[19]", "lz"), new byte?[]{0x4C, 0x5A, 0x49, 0x50}),
            new LeadingBytesFileTypeChecker(new FileType("cpio archive file[20]", "cpio"), new byte?[]{0x30, 0x37, 0x30, 0x37, 0x30, 0x37}),
            new LeadingBytesFileTypeChecker(new FileType("DOS MZ executable and its descendants (including NE and PE)", "exe", "dll", "mui", "sys", "scr", "cpl", "ocx", "ax", "iec", "ime", "rs", "tsp", "fon", "efi"), new byte?[]{0x4D, 0x5A}),
            new LeadingBytesFileTypeChecker(new FileType("DOS ZM executable and its descendants (rare)", "exe"), new byte?[]{0x5A, 0x4D}),
            new LeadingBytesFileTypeChecker(new FileType("Roshal ARchive compressed archive v1.50 onwards[21]", "rar"), new byte?[]{0x52, 0x61, 0x72, 0x21, 0x1A, 0x07, 0x00}),
            new LeadingBytesFileTypeChecker(new FileType("Roshal ARchive compressed archive v5.00 onwards[22]", "rar"), new byte?[]{0x52, 0x61, 0x72, 0x21, 0x1A, 0x07, 0x01, 0x00}),
            new LeadingBytesFileTypeChecker(new FileType("Executable and Linkable Format", ""), new byte?[]{0x7F, 0x45, 0x4C, 0x46}),
            new LeadingBytesFileTypeChecker(new FileType("Image encoded in the Portable Network Graphics format[23]", "png"), new byte?[]{0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A}),
            new LeadingBytesFileTypeChecker(new FileType("CP/M 3 and higher with overlays[24]", "com"), new byte?[]{0xC9}),
            new LeadingBytesFileTypeChecker(new FileType("Java class file Mach-O Fat Binary", "class"), new byte?[]{0xCA, 0xFE, 0xBA, 0xBE}),
            new LeadingBytesFileTypeChecker(new FileType("UTF-EBCDIC byte order mark for text[28][27]", ""), new byte?[]{0xDD, 0x73, 0x66, 0x73}),
            new LeadingBytesFileTypeChecker(new FileType("Mach-O binary (32-bit)", ""), new byte?[]{0xFE, 0xED, 0xFA, 0xCE}),
            new LeadingBytesFileTypeChecker(new FileType("Mach-O binary (64-bit)", ""), new byte?[]{0xFE, 0xED, 0xFA, 0xCF}),
            new LeadingBytesFileTypeChecker(new FileType("JKS Javakey Store[29]", ""), new byte?[]{0xFE, 0xED, 0xFE, 0xED}),
            new LeadingBytesFileTypeChecker(new FileType("Mach-O binary (reverse byte ordering scheme 32-bit)[30]", ""), new byte?[]{0xCE, 0xFA, 0xED, 0xFE}),
            new LeadingBytesFileTypeChecker(new FileType("Mach-O binary (reverse byte ordering scheme 64-bit)[30]", ""), new byte?[]{0xCF, 0xFA, 0xED, 0xFE}),
            new LeadingBytesFileTypeChecker(new FileType("PostScript document", "ps"), new byte?[]{0x25, 0x21, 0x50, 0x53}),
            new LeadingBytesFileTypeChecker(new FileType("Encapsulated PostScript file version 3.0[31]", "eps", "epsf"), new byte?[]{0x25, 0x21, 0x50, 0x53, 0x2D, 0x41, 0x64, 0x6F, 0x62, 0x65, 0x2D, 0x33, 0x2E, 0x30, 0x20, 0x45, 0x50, 0x53, 0x46, 0x2D, 0x33, 0x2E, 0x30}),
            new LeadingBytesFileTypeChecker(new FileType("Encapsulated PostScript file version 3.1[32]", "eps", "epsf"), new byte?[]{0x25, 0x21, 0x50, 0x53, 0x2D, 0x41, 0x64, 0x6F, 0x62, 0x65, 0x2D, 0x33, 0x2E, 0x31, 0x20, 0x45, 0x50, 0x53, 0x46, 0x2D, 0x33, 0x2E, 0x30}),
            new LeadingBytesFileTypeChecker(new FileType("MS Windows HtmlHelp Data", "chm"), new byte?[]{0x49, 0x54, 0x53, 0x46, 0x03, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00}),
            new LeadingBytesFileTypeChecker(new FileType("Windows 3.x/95/98 Help file", "hlp"), new byte?[]{0x3F, 0x5F}),
            new LeadingBytesFileTypeChecker(new FileType("Advanced Systems Format[34]", "asf", "wma", "wmv"), new byte?[]{0x30, 0x26, 0xB2, 0x75, 0x8E, 0x66, 0xCF, 0x11, 0xA6, 0xD9, 0x00, 0xAA, 0x00, 0x62, 0xCE, 0x6C}),
            new LeadingBytesFileTypeChecker(new FileType("System Deployment Image a disk image format used by Microsoft", ""), new byte?[]{0x24, 0x53, 0x44, 0x49, 0x30, 0x30, 0x30, 0x31}),
            new LeadingBytesFileTypeChecker(new FileType("Ogg an open source media container format", "ogg", "oga", "ogv"), new byte?[]{0x4F, 0x67, 0x67, 0x53}),
            new LeadingBytesFileTypeChecker(new FileType("Photoshop Document file Adobe Photoshop's native file format", "psd"), new byte?[]{0x38, 0x42, 0x50, 0x53}),
            new LeadingBytesFileTypeChecker(new FileType("Waveform Audio File Format[35]", "wav"), new byte?[]{0x52, 0x49, 0x46, 0x46, null, null, null, null, 0x57, 0x41, 0x56, 0x45}),
            new LeadingBytesFileTypeChecker(new FileType("Audio Video Interleave video format[36]", "avi"), new byte?[]{0x52, 0x49, 0x46, 0x46, null, null, null, null, 0x41, 0x56, 0x49, 0x20}),
            new LeadingBytesFileTypeChecker(new FileType("MPEG-1 Layer 3 file without an ID3 tag or with an ID3v1 tag (which is appended at the end of the file)", "mp3"), new byte?[]{0xFF, 0xFB}),
            new LeadingBytesFileTypeChecker(new FileType("MPEG-1 Layer 3 file without an ID3 tag or with an ID3v1 tag (which is appended at the end of the file)", "mp3"), new byte?[]{0xFF, 0xF3}),
            new LeadingBytesFileTypeChecker(new FileType("MPEG-1 Layer 3 file without an ID3 tag or with an ID3v1 tag (which is appended at the end of the file)", "mp3"), new byte?[]{0xFF, 0xF2}),
            new LeadingBytesFileTypeChecker(new FileType("MP3 file with an ID3v2 container", "mp3"), new byte?[]{0x49, 0x44, 0x33}),
            new LeadingBytesFileTypeChecker(new FileType("BMP file a bitmap format used mostly in the Windows world", "bmp", "dib"), new byte?[]{0x42, 0x4D}),
            new LeadingBytesFileTypeChecker(new FileType("ISO9660 CD/DVD image file[37]", "iso"), 0x8001, new byte?[]{0x43, 0x44, 0x30, 0x30, 0x31}),
            new LeadingBytesFileTypeChecker(new FileType("CD-i CD image file", "cdi"), 0x5EAC9, new byte?[]{0x43, 0x44, 0x30, 0x30, 0x31}),
            new LeadingBytesFileTypeChecker(new FileType("Nintendo Game & Watch image file", "mgw"), new byte?[]{0x6D, 0x61, 0x69, 0x6E, 0x2E, 0x62, 0x73}),
            new LeadingBytesFileTypeChecker(new FileType("Nintendo Entertainment System image file", "nes"), new byte?[]{0x4E, 0x45, 0x53}),
            new LeadingBytesFileTypeChecker(new FileType("Commodore 64 1541 disk image (D64 format)", "d64"), 0x165A4, new byte?[]{0xA0, 0x32, 0x41, 0xA0, 0xA0, 0xA0}),
            new LeadingBytesFileTypeChecker(new FileType("Commodore 64 1541 disk image (G64 format)", "g64"), new byte?[]{0x47, 0x53, 0x52, 0x2D, 0x31, 0x35, 0x34, 0x31}),
            new LeadingBytesFileTypeChecker(new FileType("Commodore 64 1581 disk image (D81 format)", "d81"), 0x61819, new byte?[]{0xA0, 0x33, 0x44, 0xA0, 0xA0}),
            new LeadingBytesFileTypeChecker(new FileType("Commodore 64 tape image", "t64"), new byte?[]{0x43, 0x36, 0x34, 0x20, 0x74, 0x61, 0x70, 0x65, 0x20, 0x69, 0x6D, 0x61, 0x67, 0x65, 0x20, 0x66, 0x69, 0x6C, 0x65}),
            new LeadingBytesFileTypeChecker(new FileType("Commodore 64 cartridge image", "crt"), new byte?[]{0x43, 0x36, 0x34, 0x20, 0x43, 0x41, 0x52, 0x54, 0x52, 0x49, 0x44, 0x47, 0x45, 0x20, 0x20, 0x20}),
            new LeadingBytesFileTypeChecker(new FileType("Flexible Image Transport System (FITS)[38]", "fits"), new byte?[]{0x53, 0x49, 0x4D, 0x50, 0x4C, 0x45, 0x20, 0x20, 0x3D, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x54}),
            new LeadingBytesFileTypeChecker(new FileType("Free Lossless Audio Codec[39]", "flac"), new byte?[]{0x66, 0x4C, 0x61, 0x43}),
            new LeadingBytesFileTypeChecker(new FileType("MIDI sound file[40]", "mid", "midi"), new byte?[]{0x4D, 0x54, 0x68, 0x64}),
            new LeadingBytesFileTypeChecker(new FileType("Dalvik Executable", "dex"), new byte?[]{0x64, 0x65, 0x78, 0x0A, 0x30, 0x33, 0x35, 0x00}),
            new LeadingBytesFileTypeChecker(new FileType("VMDK files[42][43]", "vmdk"), new byte?[]{0x4B, 0x44, 0x4D}),
            new LeadingBytesFileTypeChecker(new FileType("VMware 4 Virtual Disk description file (split disk)", "vmdk"), new byte?[]{0x23, 0x20, 0x44, 0x69, 0x73, 0x6B, 0x20, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6F}),
            new LeadingBytesFileTypeChecker(new FileType("Google Chrome extension[44] or packaged app[45]", "crx"), new byte?[]{0x43, 0x72, 0x32, 0x34}),
            new LeadingBytesFileTypeChecker(new FileType("FreeHand 8 document[46][47]", "fh8"), new byte?[]{0x41, 0x47, 0x44, 0x33}),
            new LeadingBytesFileTypeChecker(new FileType("AppleWorks 5 document", "cwk"), new byte?[]{0x05, 0x07, 0x00, 0x00, 0x42, 0x4F, 0x42, 0x4F, 0x05, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01}),
            new LeadingBytesFileTypeChecker(new FileType("AppleWorks 6 document", "cwk"), new byte?[]{0x06, 0x07, 0xE1, 0x00, 0x42, 0x4F, 0x42, 0x4F, 0x06, 0x07, 0xE1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01}),
            new LeadingBytesFileTypeChecker(new FileType("Roxio Toast disc image file", "toast"), new byte?[]{0x45, 0x52, 0x02, 0x00, 0x00, 0x00}),
            new LeadingBytesFileTypeChecker(new FileType("Roxio Toast disc image file", "toast"), new byte?[]{0x8B, 0x45, 0x52, 0x02, 0x00, 0x00, 0x00}),
            new LeadingBytesFileTypeChecker(new FileType("eXtensible ARchive format[48]", "xar"), new byte?[]{0x78, 0x61, 0x72, 0x21}),
            new LeadingBytesFileTypeChecker(new FileType("Windows Files And Settings Transfer Repository[49] See also USMT 3.0 (Win XP)[50] and USMT 4.0 (Win 7)[51] User Guides", "dat"), new byte?[]{0x50, 0x4D, 0x4F, 0x43, 0x43, 0x4D, 0x4F, 0x43}),
            new LeadingBytesFileTypeChecker(new FileType("Nintendo Entertainment System ROM file[52]", "nes"), new byte?[]{0x4E, 0x45, 0x53, 0x1A}),
            new LeadingBytesFileTypeChecker(new FileType("tar archive[53]", "tar"), 257, new byte?[]{0x75, 0x73, 0x74, 0x61, 0x72, 0x00, 0x30, 0x30}),
            new LeadingBytesFileTypeChecker(new FileType("tar archive[53]", "tar"), 257, new byte?[]{0x75, 0x73, 0x74, 0x61, 0x72, 0x20, 0x20, 0x00}),
            new LeadingBytesFileTypeChecker(new FileType("OAR file archive format where ?? is the format version.", "oar"), new byte?[]{0x4F, 0x41, 0x52, null}),
            new LeadingBytesFileTypeChecker(new FileType("Open source portable voxel file[54]", "tox"), new byte?[]{0x74, 0x6F, 0x78, 0x33}),
            new LeadingBytesFileTypeChecker(new FileType("Magic Lantern Video file[55]", "MLV"), new byte?[]{0x4D, 0x4C, 0x56, 0x49}),
            new LeadingBytesFileTypeChecker(new FileType("Windows Update Binary Delta Compression file[56]", ""), new byte?[]{0x44, 0x43, 0x4D, 0x01, 0x50, 0x41, 0x33, 0x30}),
            new LeadingBytesFileTypeChecker(new FileType("Windows Update Binary Delta Compression file[56]", ""), new byte?[]{0x50, 0x41, 0x33, 0x30}),
            new LeadingBytesFileTypeChecker(new FileType("7-Zip File Format", "7z"), new byte?[]{0x37, 0x7A, 0xBC, 0xAF, 0x27, 0x1C}),
            new LeadingBytesFileTypeChecker(new FileType("GZIP compressed file[57]", "gz", "tar.gz"), new byte?[]{0x1F, 0x8B}),
            new LeadingBytesFileTypeChecker(new FileType("XZ compression utility using LZMA2 compression", "xz", "tar.xz"), new byte?[]{0xFD, 0x37, 0x7A, 0x58, 0x5A, 0x00}),
            new LeadingBytesFileTypeChecker(new FileType("LZ4 Frame Format[58] Remark: LZ4 block format does not offer any magic bytes.[59]", "lz4"), new byte?[]{0x04, 0x22, 0x4D, 0x18}),
            new LeadingBytesFileTypeChecker(new FileType("Microsoft Cabinet file", "cab"), new byte?[]{0x4D, 0x53, 0x43, 0x46}),
            new LeadingBytesFileTypeChecker(new FileType("Microsoft compressed file in Quantum format used prior to Windows XP. File can be decompressed using Extract.exe or Expand.exe distributed with earlier versions of Windows. After compression the last character of the original filename extension is replaced with an underscore e.g. ‘Setup.exe’ becomes ‘Setup.ex_’.", "??_"), new byte?[]{0x53, 0x5A, 0x44, 0x44, 0x88, 0xF0, 0x27, 0x33}),
            new LeadingBytesFileTypeChecker(new FileType("Free Lossless Image Format", "flif"), new byte?[]{0x46, 0x4C, 0x49, 0x46}),
            new LeadingBytesFileTypeChecker(new FileType("Matroska media container including WebM", "mkv", "mka", "mks", "mk3d", "webm"), new byte?[]{0x1A, 0x45, 0xDF, 0xA3}),
            new LeadingBytesFileTypeChecker(new FileType("SEAN : Session Analysis Training file. Also used in compatible software Rpw : Rowperfect for Windows and RP3W : ROWPERFECT3 for Windows.", "stg"), new byte?[]{0x4D, 0x49, 0x4C, 0x20}),
            new LeadingBytesFileTypeChecker(new FileType("DjVu document The following byte is either 55 (U) for single-page or 4D (M) for multi-page documents.", "djvu", "djv"), new byte?[]{0x41, 0x54, 0x26, 0x54, 0x46, 0x4F, 0x52, 0x4D, null, null, null, null, 0x44, 0x4A, 0x56}),
            new LeadingBytesFileTypeChecker(new FileType("DER encoded X.509 certificate", "der"), new byte?[]{0x30, 0x82}),
            new LeadingBytesFileTypeChecker(new FileType("PEM encoded X.509 certificate", "crt", "pem"), new byte?[]{0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x42, 0x45, 0x47, 0x49, 0x4E, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D}),
            new LeadingBytesFileTypeChecker(new FileType("PEM encoded X.509 Certificate Signing Request", "csr", "pem"), new byte?[]{0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x42, 0x45, 0x47, 0x49, 0x4E, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x20, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D}),
            new LeadingBytesFileTypeChecker(new FileType("PEM encoded X.509 PKCS#8 private key", "key", "pem"), new byte?[]{0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x42, 0x45, 0x47, 0x49, 0x4E, 0x20, 0x50, 0x52, 0x49, 0x56, 0x41, 0x54, 0x45, 0x20, 0x4B, 0x45, 0x59, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D}),
            new LeadingBytesFileTypeChecker(new FileType("PEM encoded X.509 PKCS#1 DSA private key", "key", "pem"), new byte?[]{0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x42, 0x45, 0x47, 0x49, 0x4E, 0x20, 0x44, 0x53, 0x41, 0x20, 0x50, 0x52, 0x49, 0x56, 0x41, 0x54, 0x45, 0x20, 0x4B, 0x45, 0x59, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D}),
            new LeadingBytesFileTypeChecker(new FileType("PEM encoded X.509 PKCS#1 RSA private key", "key", "pem"), new byte?[]{0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x42, 0x45, 0x47, 0x49, 0x4E, 0x20, 0x52, 0x45, 0x41, 0x20, 0x50, 0x52, 0x49, 0x56, 0x41, 0x54, 0x45, 0x20, 0x4B, 0x45, 0x59, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D}),
            new LeadingBytesFileTypeChecker(new FileType("PuTTY private key file version 2", "ppk"), new byte?[]{0x50, 0x75, 0x54, 0x54, 0x59, 0x2D, 0x55, 0x73, 0x65, 0x72, 0x2D, 0x4B, 0x65, 0x79, 0x2D, 0x46, 0x69, 0x6C, 0x65, 0x2D, 0x32, 0x3A}),
            new LeadingBytesFileTypeChecker(new FileType("PuTTY private key file version 3", "ppk"), new byte?[]{0x50, 0x75, 0x54, 0x54, 0x59, 0x2D, 0x55, 0x73, 0x65, 0x72, 0x2D, 0x4B, 0x65, 0x79, 0x2D, 0x46, 0x69, 0x6C, 0x65, 0x2D, 0x33, 0x3A}),
            new LeadingBytesFileTypeChecker(new FileType("OpenSSH private key file", ""), new byte?[]{0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x42, 0x45, 0x47, 0x49, 0x4E, 0x20, 0x4F, 0x50, 0x45, 0x4E, 0x53, 0x53, 0x48, 0x20, 0x50, 0x52, 0x49, 0x56, 0x41, 0x54, 0x45, 0x20, 0x4B, 0x45, 0x59, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D}),
            new LeadingBytesFileTypeChecker(new FileType("OpenSSH public key file", "pub"), new byte?[]{0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x42, 0x45, 0x47, 0x49, 0x4E, 0x20, 0x53, 0x53, 0x48, 0x32, 0x20, 0x4B, 0x45, 0x59, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D}),
            new LeadingBytesFileTypeChecker(new FileType("DICOM Medical File Format", "dcm"), 128, new byte?[]{0x44, 0x49, 0x43, 0x4D}),
            new LeadingBytesFileTypeChecker(new FileType("WOFF File Format 1.0[60]", "woff"), new byte?[]{0x77, 0x4F, 0x46, 0x46}),
            new LeadingBytesFileTypeChecker(new FileType("WOFF File Format 2.0[61]", "woff2"), new byte?[]{0x77, 0x4F, 0x46, 0x32}),
            new LeadingBytesFileTypeChecker(new FileType("eXtensible Markup Language[26][62]", "xml"), new byte?[]{0x3C, 0x3F, 0x78, 0x6D, 0x6C, 0x20}),
            new LeadingBytesFileTypeChecker(new FileType("eXtensible Markup Language[26][62]", "xml"), new byte?[]{0x3C, 0x00, 0x3F, 0x00, 0x78, 0x00, 0x6D, 0x00, 0x6C, 0x00, 0x20}),
            new LeadingBytesFileTypeChecker(new FileType("eXtensible Markup Language[26][62]", "xml"), new byte?[]{0x00, 0x3C, 0x00, 0x3F, 0x00, 0x78, 0x00, 0x6D, 0x00, 0x6C, 0x00, 0x20}),
            new LeadingBytesFileTypeChecker(new FileType("eXtensible Markup Language[26][62]", "xml"), new byte?[]{0x3C, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x6D, 0x00, 0x00, 0x00, 0x6C, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00}),
            new LeadingBytesFileTypeChecker(new FileType("eXtensible Markup Language[26][62]", "xml"), new byte?[]{0x00, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x6D, 0x00, 0x00, 0x00, 0x6C, 0x00, 0x00, 0x00, 0x20}),
            new LeadingBytesFileTypeChecker(new FileType("", ""), new byte?[]{0x4C, 0x6F, 0xA7, 0x94, 0x93, 0x40}),
            new LeadingBytesFileTypeChecker(new FileType("WebAssembly binary format[63]", "wasm"), new byte?[]{0x00, 0x61, 0x73, 0x6D}),
            new LeadingBytesFileTypeChecker(new FileType("Lepton compressed JPEG image[64]", "lep"), new byte?[]{0xCF, 0x84, 0x01}),
            new LeadingBytesFileTypeChecker(new FileType("Adobe Flash .swf", "swf"), new byte?[]{0x43, 0x57, 0x53}),
            new LeadingBytesFileTypeChecker(new FileType("", ""), new byte?[]{0x46, 0x57, 0x53}),
            new LeadingBytesFileTypeChecker(new FileType("linux deb file", "deb"), new byte?[]{0x21, 0x3C, 0x61, 0x72, 0x63, 0x68, 0x3E, 0x0A}),
            new LeadingBytesFileTypeChecker(new FileType("Google WebP image file where ?? ?? ?? ?? is the file size. More information on WebP File Header", "webp"), new byte?[]{0x52, 0x49, 0x46, 0x46, null, null, null, null, 0x57, 0x45, 0x42, 0x50}),
            new LeadingBytesFileTypeChecker(new FileType("U-Boot / uImage. Das U-Boot Universal Boot Loader.[65]", ""), new byte?[]{0x27, 0x05, 0x19, 0x56}),
            new LeadingBytesFileTypeChecker(new FileType("Rich Text Format", "rtf"), new byte?[]{0x7B, 0x5C, 0x72, 0x74, 0x66, 0x31}),
            new LeadingBytesFileTypeChecker(new FileType("Microsoft Tape Format", ""), new byte?[]{0x54, 0x41, 0x50, 0x45}),
            new LeadingBytesFileTypeChecker(new FileType("MPEG Program Stream (MPEG-1 Part 1 (essentially identical) and MPEG-2 Part 1)", "m2p", "vob", "mpg", "mpeg"), new byte?[]{0x00, 0x00, 0x01, 0xBA}),
            new LeadingBytesFileTypeChecker(new FileType("MPEG-1 video and MPEG-2 video (MPEG-1 Part 2 and MPEG-2 Part 2)", "mpg", "mpeg"), new byte?[]{0x00, 0x00, 0x01, 0xB3}),
            new LeadingBytesFileTypeChecker(new FileType("ISO Base Media file (MPEG-4)", "mp4"),4, new byte?[]{0x66, 0x74, 0x79, 0x70, 0x69, 0x73, 0x6F, 0x6D}),
            new LeadingBytesFileTypeChecker(new FileType("MPEG-4 video file", "mp4"), 4, new byte?[]{0x66, 0x74, 0x79, 0x70, 0x4D, 0x53, 0x4E, 0x56}),
            new LeadingBytesFileTypeChecker(new FileType("No Compression (no preset dictionary)", "zlib"), new byte?[]{0x78, 0x01}),
            new LeadingBytesFileTypeChecker(new FileType("Best speed (no preset dictionary)", "zlib"), new byte?[]{0x78, 0x5E}),
            new LeadingBytesFileTypeChecker(new FileType("Default Compression (no preset dictionary)", "zlib"), new byte?[]{0x78, 0x9C}),
            new LeadingBytesFileTypeChecker(new FileType("Best Compression (no preset dictionary)", "zlib"), new byte?[]{0x78, 0xDA}),
            new LeadingBytesFileTypeChecker(new FileType("No Compression (with preset dictionary)", "zlib"), new byte?[]{0x78, 0x20}),
            new LeadingBytesFileTypeChecker(new FileType("Best speed (with preset dictionary)", "zlib"), new byte?[]{0x78, 0x7D}),
            new LeadingBytesFileTypeChecker(new FileType("Default Compression (with preset dictionary)", "zlib"), new byte?[]{0x78, 0xBB}),
            new LeadingBytesFileTypeChecker(new FileType("Best Compression (with preset dictionary)", "zlib"), new byte?[]{0x78, 0xF9}),
            new LeadingBytesFileTypeChecker(new FileType("LZFSE - Lempel-Ziv style data compression algorithm using Finite State Entropy coding. OSS by Apple.[67]", "lzfse"), new byte?[]{0x62, 0x76, 0x78, 0x32}),
            new LeadingBytesFileTypeChecker(new FileType("Apache ORC (Optimized Row Columnar) file format", "orc"), new byte?[]{0x4F, 0x52, 0x43}),
            new LeadingBytesFileTypeChecker(new FileType("Apache Avro binary file format", "avro"), new byte?[]{0x4F, 0x62, 0x6A, 0x01}),
            new LeadingBytesFileTypeChecker(new FileType("RCFile columnar file format", "rc"), new byte?[]{0x53, 0x45, 0x51, 0x36}),
            new LeadingBytesFileTypeChecker(new FileType("Roblox place file [68]", "rbxl"), new byte?[]{0x3C, 0x72, 0x6F, 0x62, 0x6C, 0x6F, 0x78, 0x21}),
            new LeadingBytesFileTypeChecker(new FileType("PhotoCap Object Templates", "p25", "obt"), new byte?[]{0x65, 0x87, 0x78, 0x56}),
            new LeadingBytesFileTypeChecker(new FileType("PhotoCap Vector", "pcv"), new byte?[]{0x55, 0x55, 0xAA, 0xAA}),
            new LeadingBytesFileTypeChecker(new FileType("PhotoCap Template", "pbt", "pdt", "pea", "peb", "pet", "pgt", "pict", "pjt", "pkt", "pmt"), new byte?[]{0x78, 0x56, 0x34}),
            new LeadingBytesFileTypeChecker(new FileType("Apache Parquet columnar file format", ""), new byte?[]{0x50, 0x41, 0x52, 0x31}),
            new LeadingBytesFileTypeChecker(new FileType("Emulator Emaxsynth samples", "ez2"), new byte?[]{0x45, 0x4D, 0x58, 0x32}),
            new LeadingBytesFileTypeChecker(new FileType("Emulator III synth samples", "ez3", "iso"), new byte?[]{0x45, 0x4D, 0x55, 0x33}),
            new LeadingBytesFileTypeChecker(new FileType("Lua bytecode[69]", "luac"), new byte?[]{0x1B, 0x4C, 0x75, 0x61}),
            new LeadingBytesFileTypeChecker(new FileType("macOS file Alias[70] (Symbolic link)", "alias"), new byte?[]{0x62, 0x6F, 0x6F, 0x6B, 0x00, 0x00, 0x00, 0x00, 0x6D, 0x61, 0x72, 0x6B, 0x00, 0x00, 0x00, 0x00}),
            new LeadingBytesFileTypeChecker(new FileType("Microsoft Zone Identifier for URL Security Zones[71][72]", "Identifier"), new byte?[]{0x5B, 0x5A, 0x6F, 0x6E, 0x65, 0x54, 0x72, 0x61, 0x6E, 0x73, 0x66, 0x65, 0x72, 0x5D}),
            new LeadingBytesFileTypeChecker(new FileType("Email Message var5[citation needed]", "eml"), new byte?[]{0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x3A}),
            new LeadingBytesFileTypeChecker(new FileType("Tableau Datasource", "tde"), new byte?[]{0x20, 0x02, 0x01, 0x62, 0xA0, 0x1E, 0xAB, 0x07, 0x02, 0x00, 0x00, 0x00}),
            new LeadingBytesFileTypeChecker(new FileType("KDB file", "kdb"), new byte?[]{0x37, 0x48, 0x03, 0x02, 0x00, 0x00, 0x00, 0x00, 0x58, 0x35, 0x30, 0x39, 0x4B, 0x45, 0x59}),
            new LeadingBytesFileTypeChecker(new FileType("PGP file [73]", "pgp"), new byte?[]{0x85, null, null, 0x03}),
            new LeadingBytesFileTypeChecker(new FileType("Zstandard compress[74][75]", "zst"), new byte?[]{0x28, 0xB5, 0x2F, 0xFD}),
            new LeadingBytesFileTypeChecker(new FileType("QuickZip rs compressed archive[76][77]", "rs"), new byte?[]{0x52, 0x53, 0x56, 0x4B, 0x44, 0x41, 0x54, 0x41}),
            new LeadingBytesFileTypeChecker(new FileType("Smile file", "sml"), new byte?[]{0x3A, 0x29, 0x0A}),
            new LeadingBytesFileTypeChecker(new FileType("Preferred Executable Format", ""), new byte?[]{0x4A, 0x6F, 0x79, 0x21}),
            new LeadingBytesFileTypeChecker(new FileType("SubRip File", "srt"), new byte?[]{0x31, 0x0A, 0x30, 0x30}),
            new LeadingBytesFileTypeChecker(new FileType("VPK file used to store game data for some Source Engine games", "vpk"), new byte?[]{0x34, 0x12, 0xAA, 0x55}),
            new LeadingBytesFileTypeChecker(new FileType("ACE (compressed file format)[citation needed]", "ace"),7, new byte?[]{0x2A, 0x2A, 0x41, 0x43, 0x45, 0x2A, 0x2A}),
            new LeadingBytesFileTypeChecker(new FileType("ARJ", "arj"), new byte?[]{0x60, 0xEA}),
            new LeadingBytesFileTypeChecker(new FileType("InstallShield CAB Archive File", "cab"), new byte?[]{0x49, 0x53, 0x63, 0x28}),
            new LeadingBytesFileTypeChecker(new FileType("Windows 3.1x Compressed File", "??_"), new byte?[]{0x4B, 0x57, 0x41, 0x4A}),
            new LeadingBytesFileTypeChecker(new FileType("Windows 9x Compressed File", "??_"), new byte?[]{0x53, 0x5A, 0x44, 0x44}),
            new LeadingBytesFileTypeChecker(new FileType("Zoo (file format)", "zoo"), new byte?[]{0x5A, 0x4F, 0x4F}),
            new LeadingBytesFileTypeChecker(new FileType("Portable bitmap ASCII", "pbm"), new byte?[]{0x50, 0x31, 0x0A}),
            new LeadingBytesFileTypeChecker(new FileType("Portable bitmap binary", "pbm"), new byte?[]{0x50, 0x34, 0x0A}),
            new LeadingBytesFileTypeChecker(new FileType("Portable Gray Map ASCII", "pgm"), new byte?[]{0x50, 0x32, 0x0A}),
            new LeadingBytesFileTypeChecker(new FileType("Portable Gray Map binary", "pgm"), new byte?[]{0x50, 0x35, 0x0A}),
            new LeadingBytesFileTypeChecker(new FileType("Portable Pixmap ASCII", "ppm"), new byte?[]{0x50, 0x33, 0x0A}),
            new LeadingBytesFileTypeChecker(new FileType("Portable Pixmap binary", "ppm"), new byte?[]{0x50, 0x36, 0x0A}),
            new LeadingBytesFileTypeChecker(new FileType("Windows Metafile", "wmf"), new byte?[]{0xD7, 0xCD, 0xC6, 0x9A}),
            new LeadingBytesFileTypeChecker(new FileType("XCF (file format)", "xcf"), new byte?[]{0x67, 0x69, 0x6D, 0x70, 0x20, 0x78, 0x63, 0x66}),
            new LeadingBytesFileTypeChecker(new FileType("X PixMap", "xpm"), new byte?[]{0x2F, 0x2A, 0x20, 0x58, 0x50, 0x4D, 0x20, 0x2A, 0x2F}),
            new LeadingBytesFileTypeChecker(new FileType("Advanced Forensics Format", "aff"), new byte?[]{0x41, 0x46, 0x46}),
            new LeadingBytesFileTypeChecker(new FileType("EnCase EWF version 2 format", "Ex01"), new byte?[]{0x45, 0x56, 0x46, 0x32}),
            new LeadingBytesFileTypeChecker(new FileType("EnCase EWF version 1 format", "e01"), new byte?[]{0x45, 0x56, 0x46}),
            new LeadingBytesFileTypeChecker(new FileType("qcow file format", "qcow"), new byte?[]{0x51, 0x46, 0x49}),
            new LeadingBytesFileTypeChecker(new FileType("Animated cursor", "ani"), new byte?[]{0x52, 0x49, 0x46, 0x46, null, null, null, null, 0x41, 0x43, 0x4F, 0x4E}),
            new LeadingBytesFileTypeChecker(new FileType(".cda file", "cda"), new byte?[]{0x52, 0x49, 0x46, 0x46, null, null, null, null, 0x43, 0x44, 0x44, 0x41}),
            new LeadingBytesFileTypeChecker(new FileType("Qualcomm PureVoice file format", "qcp"), new byte?[]{0x52, 0x49, 0x46, 0x46, null, null, null, null, 0x51, 0x4C, 0x43, 0x4D}),
            new LeadingBytesFileTypeChecker(new FileType("Adobe Shockwave[78][79][80] (big-endian)", "dcr"), new byte?[]{0x52, 0x49, 0x46, 0x58, null, null, null, null, 0x46, 0x47, 0x44, 0x4D}),
            new LeadingBytesFileTypeChecker(new FileType("Adobe Shockwave[78][79][80] (little-endian)", "dcr"), new byte?[]{0x58, 0x46, 0x49, 0x52, null, null, null, null, 0x4D, 0x44, 0x47, 0x46}),
            new LeadingBytesFileTypeChecker(new FileType("Macromedia Director file format[81][79][80] (big-endian)", "dir", "dxr", "drx"), new byte?[]{0x52, 0x49, 0x46, 0x58, null, null, null, null, 0x4D, 0x56, 0x39, 0x33}),
            new LeadingBytesFileTypeChecker(new FileType("Macromedia Director file format[81][79][80] (little-endian)", "dir", "dxr", "drx"), new byte?[]{0x58, 0x46, 0x49, 0x52, null, null, null, null, 0x33, 0x39, 0x56, 0x4D}),
            new LeadingBytesFileTypeChecker(new FileType("Flash Video file", "flv"), new byte?[]{0x46, 0x4C, 0x56}),
            new LeadingBytesFileTypeChecker(new FileType("VirtualBox Virtual Hard Disk file format", "vdi"), new byte?[]{0x3C, 0x3C, 0x3C, 0x20, 0x4F, 0x72, 0x61, 0x63, 0x6C, 0x65, 0x20, 0x56, 0x4D, 0x20, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6C, 0x42, 0x6F, 0x78, 0x20, 0x44, 0x69, 0x73, 0x6B, 0x20, 0x49, 0x6D, 0x61, 0x67, 0x65, 0x20, 0x3E, 0x3E, 0x3E}),
            new LeadingBytesFileTypeChecker(new FileType("Windows Virtual PC Virtual Hard Disk file format", "vhd"), new byte?[]{0x63, 0x6F, 0x6E, 0x6E, 0x65, 0x63, 0x74, 0x69, 0x78}),
            new LeadingBytesFileTypeChecker(new FileType("Windows Virtual PC Windows 8 Virtual Hard Disk file format", "vhdx"), new byte?[]{0x76, 0x68, 0x64, 0x78, 0x66, 0x69, 0x6C, 0x65}),
            new LeadingBytesFileTypeChecker(new FileType("Compressed ISO image", "isz"), new byte?[]{0x49, 0x73, 0x5A, 0x21}),
            new LeadingBytesFileTypeChecker(new FileType("Direct Access Archive PowerISO", "daa"), new byte?[]{0x44, 0x41, 0x41}),
            new LeadingBytesFileTypeChecker(new FileType("Windows Event Viewer file format", "evt"), new byte?[]{0x4C, 0x66, 0x4C, 0x65}),
            new LeadingBytesFileTypeChecker(new FileType("Windows Event Viewer XML file format", "evtx"), new byte?[]{0x45, 0x6C, 0x66, 0x46, 0x69, 0x6C, 0x65}),
            new LeadingBytesFileTypeChecker(new FileType("Windows customized database", "sdb"),8, new byte?[]{0x73, 0x64, 0x62, 0x66}),
            new LeadingBytesFileTypeChecker(new FileType("Windows 3.x Program Manager Program Group file format", "grp"), new byte?[]{0x50, 0x4D, 0x43, 0x43}),
            new LeadingBytesFileTypeChecker(new FileType("ICC profile", "icm"), new byte?[]{0x4B, 0x43, 0x4D, 0x53}),
            new LeadingBytesFileTypeChecker(new FileType("Windows Registry file", "dat", "hiv"), new byte?[]{0x72, 0x65, 0x67, 0x66}),
            new LeadingBytesFileTypeChecker(new FileType("Microsoft Outlook Personal Storage Table file", "pst"), new byte?[]{0x21, 0x42, 0x44, 0x4E}),
            new LeadingBytesFileTypeChecker(new FileType("3D model compressed with Google Draco[82]", "drc"), new byte?[]{0x44, 0x52, 0x41, 0x43, 0x4F}),
            new LeadingBytesFileTypeChecker(new FileType("Gridded data (commonly weather observations or forecasts) in the WMO GRIB or GRIB2 format[83]", "grib", "grib2"), new byte?[]{0x47, 0x52, 0x49, 0x42}),
            new LeadingBytesFileTypeChecker(new FileType("Blender File Format[84]", "blend"), new byte?[]{0x42, 0x4C, 0x45, 0x4E, 0x44, 0x45, 0x52}),
            new LeadingBytesFileTypeChecker(new FileType("Image encoded in the JPEG XL format[85]", "jxl"), new byte?[]{0x00, 0x00, 0x00, 0x0C, 0x4A, 0x58, 0x4C, 0x20, 0x0D, 0x0A, 0x87, 0x0A}),
            new LeadingBytesFileTypeChecker(new FileType("", ""), new byte?[]{0xFF, 0x0A}),
            new LeadingBytesFileTypeChecker(new FileType("TrueType font", "ttf", "tte", "dfont"), new byte?[]{0x00, 0x01, 0x00, 0x00, 0x00}),
            new LeadingBytesFileTypeChecker(new FileType("OpenType font[86]", "otf"), new byte?[]{0x4F, 0x54, 0x54, 0x4F}),
            new LeadingBytesFileTypeChecker(new FileType("Modulefile for Environment Modules[87]", ""), new byte?[]{0x23, 0x25, 0x4D, 0x6F, 0x64, 0x75, 0x6C, 0x65}),
            new LeadingBytesFileTypeChecker(new FileType("Windows Imaging Format file", "wim", "swm", "esd"), new byte?[]{0x4D, 0x53, 0x57, 0x49, 0x4D, 0x00, 0x00, 0x00, 0xD0, 0x00, 0x00, 0x00, 0x00}),
            new LeadingBytesFileTypeChecker(new FileType("Slob (sorted list of blobs) is a read-only compressed data store with dictionary-like interface[88]", "slob"), new byte?[]{0x21, 0x2D, 0x31, 0x53, 0x4C, 0x4F, 0x42, 0x1F}),
            new LeadingBytesFileTypeChecker(new FileType("Serialized Java Data[89]", ""), new byte?[]{0xAC, 0xED}),
            new LeadingBytesFileTypeChecker(new FileType("Creative Voice file", "voc"), new byte?[]{0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x20, 0x56, 0x6F, 0x69, 0x63, 0x65, 0x20, 0x46, 0x69, 0x6C, 0x65, 0x1A, 0x1A, 0x00}),
            new LeadingBytesFileTypeChecker(new FileType("Au audio file format", "au", "snd"), new byte?[]{0x2E, 0x73, 0x6E, 0x64}),
            new LeadingBytesFileTypeChecker(new FileType("OpenGL Iris Perfomer .PFB (Performer Fast Binary)[90]", ""), new byte?[]{0xDB, 0x0A, 0xCE, 0x00}),
            new LeadingBytesFileTypeChecker(new FileType("Noodlesoft Hazel [91]", "hazelrules"), new byte?[]{0x48, 0x5A, 0x4C, 0x52, 0x00, 0x00, 0x00, 0x18}),
            new LeadingBytesFileTypeChecker(new FileType("FL Studio Project File", "flp"), new byte?[]{0x46, 0x4C, 0x68, 0x64}),
            new LeadingBytesFileTypeChecker(new FileType("FL Studio Mobile Project File", "flm"), new byte?[]{0x31, 0x30, 0x4C, 0x46}),
            new LeadingBytesFileTypeChecker(new FileType("Vormetric Encryption DPM Version 2.1 Header[92]", ""), new byte?[]{0x52, 0x4B, 0x4D, 0x43, 0x32, 0x31, 0x30}),
            new LeadingBytesFileTypeChecker(new FileType("Microsoft Money file", "mny"), new byte?[]{0x00, 0x01, 0x00, 0x00, 0x4D, 0x53, 0x49, 0x53, 0x41, 0x4D, 0x20, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65}),
            new LeadingBytesFileTypeChecker(new FileType("Microsoft Access 2007 Database", "accdb"), new byte?[]{0x00, 0x01, 0x00, 0x00, 0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64, 0x20, 0x41, 0x43, 0x45, 0x20, 0x44, 0x42}),
            new LeadingBytesFileTypeChecker(new FileType("Microsoft Access Database", "mdb"), new byte?[]{0x00, 0x01, 0x00, 0x00, 0x53, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64, 0x20, 0x4A, 0x65, 0x74, 0x20, 0x44, 0x42}),
            new LeadingBytesFileTypeChecker(new FileType("Micrografx vector graphic file", "drw"), new byte?[]{0x01, 0xFF, 0x02, 0x04, 0x03, 0x02}),
            new LeadingBytesFileTypeChecker(new FileType("Digital Speech Standard (Olympus Grundig & Phillips) v2", "dss"), new byte?[]{0x02, 0x64, 0x73, 0x73}),
            new LeadingBytesFileTypeChecker(new FileType("Digital Speech Standard (Olympus Grundig & Phillips) v3", "dss"), new byte?[]{0x03, 0x64, 0x73, 0x73}),
            new LeadingBytesFileTypeChecker(new FileType("Approach index file", "adx"), new byte?[]{0x03, 0x00, 0x00, 0x00, 0x41, 0x50, 0x50, 0x52}),
            new LeadingBytesFileTypeChecker(new FileType("Adobe InDesign document", "indd"), new byte?[]{0x06, 0x06, 0xED, 0xF5, 0xD8, 0x1D, 0x46, 0xE5, 0xBD, 0x31, 0xEF, 0xE7, 0xFE, 0x74, 0xB7, 0x1D}),
            new LeadingBytesFileTypeChecker(new FileType("SkinCrafter skin file", "skf"), new byte?[]{0x07, 0x53, 0x4B, 0x46}),
            new LeadingBytesFileTypeChecker(new FileType("DesignTools 2D Design file", "dtd"), new byte?[]{0x07, 0x64, 0x74, 0x32, 0x64, 0x64, 0x74, 0x64}),
            new LeadingBytesFileTypeChecker(new FileType("MultiBit Bitcoin wallet file", "wallet"), new byte?[]{0x0A, 0x16, 0x6F, 0x72, 0x67, 0x2E, 0x62, 0x69, 0x74, 0x63, 0x6F, 0x69, 0x6E, 0x2E, 0x70, 0x72}),
            new LeadingBytesFileTypeChecker(new FileType("DeskMate Document file", "doc"), new byte?[]{0x0D, 0x44, 0x4F, 0x43}),
            new LeadingBytesFileTypeChecker(new FileType("Nero CD Compilation", "nri"), new byte?[]{0x0E, 0x4E, 0x65, 0x72, 0x6F, 0x49, 0x53, 0x4F}),
            new LeadingBytesFileTypeChecker(new FileType("DeskMate Worksheet", "wks"), new byte?[]{0x0E, 0x57, 0x4B, 0x53}),
            new LeadingBytesFileTypeChecker(new FileType("Sibelius Music - Score file", "sib"), new byte?[]{0x0F, 0x53, 0x49, 0x42, 0x45, 0x4C, 0x49, 0x55, 0x53}),
            new LeadingBytesFileTypeChecker(new FileType("Microsoft Developer Studio project file", "dsp"), new byte?[]{0x23, 0x20, 0x4D, 0x69, 0x63, 0x72, 0x6F, 0x73, 0x6F, 0x66, 0x74, 0x20, 0x44, 0x65, 0x76, 0x65, 0x6C, 0x6F, 0x70, 0x65, 0x72, 0x20, 0x53, 0x74, 0x75, 0x64, 0x69, 0x6F}),
            new LeadingBytesFileTypeChecker(new FileType("Adaptive Multi-Rate ACELP (Algebraic Code Excited Linear Prediction) Codec commonly audio format with GSM cell phones.", "amr"), new byte?[]{0x23, 0x21, 0x41, 0x4D, 0x52}),
            new LeadingBytesFileTypeChecker(new FileType("Audio compression format developed by Skype", "sil"), new byte?[]{0x23, 0x21, 0x53, 0x49, 0x4C, 0x4B, 0x0A}),
            new LeadingBytesFileTypeChecker(new FileType("Radiance High Dynamic Range image file", "hdr"), new byte?[]{0x23, 0x3F, 0x52, 0x41, 0x44, 0x49, 0x41, 0x4E, 0x43, 0x45, 0x0A}),
            new LeadingBytesFileTypeChecker(new FileType("VBScript Encoded script", "vbe"), new byte?[]{0x23, 0x40, 0x7E, 0x5E}),
            new LeadingBytesFileTypeChecker(new FileType("MikroTik WinBox Connection Database (Address Book)", "cdb"), new byte?[]{0x0D, 0xF0, 0x1D, 0xC0}),
            new LeadingBytesFileTypeChecker(new FileType("Multimedia playlist", "m3um3u8"), new byte?[]{0x23, 0x45, 0x58, 0x54, 0x4D, 0x33, 0x55}),
            new LeadingBytesFileTypeChecker(new FileType("M2 Archive used by game developer M2", "m"), new byte?[]{0x6D, 0x64, 0x66, 0x00}),
            new LeadingBytesFileTypeChecker(new FileType("Capcom RE Engine game data archives", "pak"), new byte?[]{0x4B, 0x50, 0x4B, 0x41}),
            new LeadingBytesFileTypeChecker(new FileType("Capcom MT Framework game data archives", "arc"), new byte?[]{0x41, 0x52, 0x43}),
            new LeadingBytesFileTypeChecker(new FileType("Interleaf PrinterLeaf / WorldView document format (now Broadvision QuickSilver)", "pl"), new byte?[]{0xD0, 0x4F, 0x50, 0x53}),
            new LeadingBytesFileTypeChecker(new FileType("Single file NIfTI format used extensively in biomedical imaging.", "nii"), 344, new byte?[]{0x6E, 0x2B, 0x31, 0x00}),
            new LeadingBytesFileTypeChecker(new FileType("Header file of a .hdr/.img pair in NIfTI format used extensively in biomedical imaging.", "hdr"), 344, new byte?[]{0x6E, 0x69, 0x31, 0x00}),
            new LeadingBytesFileTypeChecker(new FileType("Report Builder file from Digital Metaphors", ""), new byte?[]{0x52, 0x41, 0x46, 0x36, 0x34}),
            new LeadingBytesFileTypeChecker(new FileType("Resource file Visionaire 3.x Engine", ""), new byte?[]{0x56, 0x49, 0x53, 0x33}),
            new LeadingBytesFileTypeChecker(new FileType("Health Level Seven (HL7) Standard for electronic data exchange [1]", "hl7"), new byte?[]{0x4D, 0x53, 0x48, 0x7C, 0x42, 0x53, 0x48, 0x7C}),
            new LeadingBytesFileTypeChecker(new FileType("SAP Power Monitor (version 1.1.0 and higher) data file", "pwrdata"), new byte?[]{0x70, 0x77, 0x72, 0x64, 0x61, 0x74, 0x61}),
            new LeadingBytesFileTypeChecker(new FileType("ARC archive file", "arc"), new byte?[]{0x1A, 0x08}),
            new LeadingBytesFileTypeChecker(new FileType("Armored PGP public key", "asc"), new byte?[]{0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x42, 0x45, 0x47, 0x49, 0x4E, 0x20, 0x50, 0x47, 0x50, 0x20, 0x50, 0x55, 0x42, 0x4C, 0x49, 0x43, 0x20, 0x4B, 0x45, 0x49, 0x20, 0x42, 0x4C, 0x4F, 0x43, 0x4B, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D}),
            new LeadingBytesFileTypeChecker(new FileType("Windows 3.x - Windows 95 Help Contents", "cnt"), new byte?[]{0x3A, 0x42, 0x61, 0x73, 0x65, 0x20}),
            new LeadingBytesFileTypeChecker(new FileType("VirtualDub", "vdr"), new byte?[]{0x52, 0x49, 0x46, 0x46, null, null, null, null, 0x56, 0x44, 0x52, 0x4D}),
            new LeadingBytesFileTypeChecker(new FileType("TrID", "trd"), new byte?[]{0x52, 0x59, 0x46, 0x46, null, null, null, null, 0x54, 0x52, 0x49, 0x44}),
            new LeadingBytesFileTypeChecker(new FileType("Corel SHOW! 4.0", "shw"), new byte?[]{0x52, 0x49, 0x46, 0x46, null, null, null, null, 0x73, 0x68, 0x77, 0x34}),
            new LeadingBytesFileTypeChecker(new FileType("Corel SHOW! 5.0", "shw"), new byte?[]{0x52, 0x49, 0x46, 0x46, null, null, null, null, 0x73, 0x68, 0x77, 0x35}),
            new LeadingBytesFileTypeChecker(new FileType("Corel SHOW! 5.0 player", "shr"), new byte?[]{0x52, 0x49, 0x46, 0x46, null, null, null, null,}),

            //https://www.loc.gov/preservation/digital/formats/fdd/fdd000013.shtml
            new RuleBasedFileTypeChecker(new FileType("Material Exchange Format file", "mxf"), new Func<byte[],bool>( (fileBytes) => {
                byte[] magicBytes = new byte[]{0x06, 0x0E, 0x2B, 0x34, 0x02, 0x05, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x01, 0x02};

                int limit = fileBytes.Length - magicBytes.Length < 64000 - magicBytes.Length ?
                    fileBytes.Length - magicBytes.Length :
                    64000 - magicBytes.Length;
                for (int i = 0; i < limit; i++)
                { 
                    byte fileByte = fileBytes[i]; 
                    if(fileBytes[i] == magicBytes[0])
                    {
                        for (int j = 0; j < magicBytes.Length; j++)
                        { 
                            if(magicBytes[j] != fileBytes[i+j])
                            {
                                break;
                            }

                            if(j == magicBytes.Length - 1)
                            {
                                return true;
                            }
                        }
                    }    
                }

                return false;
            })),

            new RuleBasedFileTypeChecker(new FileType("MPEG Transport Stream (MPEG-2 Part 1)[66]", "ts", "tsv", "tsa", "mpg", "mpeg"), new Func<byte[],bool>( (fileBytes) => {
                for (int i = 0; i < fileBytes.Length; i++)
                { 
                    if(i % 188 == 0)
                    {
                        byte fileByte = fileBytes[i];
                        if(fileByte != 0x44)
                        {
                            return false;
                        }
                    }
                }
                
                return true;
            })),

             //https://opendmgfile.com/file_format.html
            new TrailingBytesFileTypeChecker(new FileType("Apple Disk Image file", "dmg"), 512, new byte?[]{0x6B, 0x6F, 0x6C, 0x79}),
        };

    }
}
